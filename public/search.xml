<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[6-ceph安装部署]]></title>
    <url>%2F2019%2F09%2F26%2F6-ceph%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%2F</url>
    <content type="text"><![CDATA[Ceph是一个统一的分布式存储系统，设计初衷是提供较好的性能、可靠性和可扩展性。 简单了解什么是块存储/对象存储/文件系统存储？ceph 目前提供对象存储（RADOSGW）、块存储RDB以及 CephFS 文件系统这 3 种功能。对于这3种功能介绍，分别如下： 对象存储，也就是通常意义的键值存储，其接口就是简单的GET、PUT、DEL 和其他扩展，代表主要有 Swift 、S3 以及 Gluster 等； 块存储，这种接口通常以 QEMU Driver 或者 Kernel Module 的方式存在，这种接口需要实现 Linux 的 Block Device 的接口或者 QEMU 提供的 Block Driver 接口，如 Sheepdog，AWS 的 EBS，青云的云硬盘和阿里云的盘古系统，还有 Ceph 的 RBD（RBD是Ceph面向块存储的接口）。在常见的存储中 DAS、SAN 提供的也是块存储； 文件存储，通常意义是支持 POSIX 接口，它跟传统的文件系统如 Ext4 是一个类型的，但区别在于分布式存储提供了并行化的能力，如 Ceph 的 CephFS (CephFS是Ceph面向文件存储的接口)，但是有时候又会把 GlusterFS ，HDFS 这种非POSIX接口的类文件存储接口归入此类。当然 NFS、NAS也是属于文件系统存储； 参考教程Kubernetes 集成 Ceph 后端存储教程centos7安装ceph集群 准备配置源12345678910111213141516171819202122cat &gt;/etc/yum.repos.d/ceph.repo&lt;&lt;EOF[ceph]name=cephbaseurl=http://mirrors.aliyun.com/ceph/rpm-jewel/el7/x86_64/gpgcheck=0priority=1[ceph-noarch]name=cephnoarchbaseurl=http://mirrors.aliyun.com/ceph/rpm-jewel/el7/noarch/gpgcheck=0priority=1[ceph-source]name=Ceph source packagesbaseurl=http://mirrors.163.com/ceph/rpm-jewel/el7/SRPMSenabled=0gpgcheck=1type=rpm-mdgpgkey=http://mirrors.163.com/ceph/keys/release.ascpriority=1EOF 安装过卸载123ceph-deploy purge dk1-t dk2-tceph-deploy purgedata dk1-t dk2-tceph-deploy forgetkeys 在dk2-t节点创建集群 mon模块1234567891011121314151617181920212223242526272829303132333435363738394041424344454647yum install ceph-deploy -yceph-deploy --versionmkdir /data/cephcd /data/cephceph-deploy new dk2-t# 查看配置文件ls -l# 配置ceph.conf[global]...# 如果有多个网卡，应该配置如下选项，# public network是公共网络，负责集群对外提供服务的流量# cluster network是集群网络，负载集群中数据复制传输通信等# 本次实验使用同一块网卡，生境环境建议分别使用一块网卡public network = 172.16.76.0/22cluster network = 172.16.76.0/22osd pool default size = 2# 安装 ceph 包# 如果按照官方文档安装方法 会重新配置安装官方ceph源# 由于网络问题，安装可能会出错，需要多次执行# ceph-deploy install 其实只是会安装 ceph ceph-radosgw 两个包# ceph-deploy install lab1 lab2 lab3# 推荐使用阿里源安装，因为使用ceph-deploy安装会很慢# 使用如下命令手动安装包，替代官方的 ceph-deploy install 命令# 如下操作在所有node节点上执行export CEPH_DEPLOY_REPO_URL=http://mirrors.163.com/ceph/rpm-luminous/el7export CEPH_DEPLOY_GPG_URL=http://mirrors.163.com/ceph/keys/release.asc# 先执行是因为 ceph-deploy install太慢yum install -y ceph ceph-radosgwceph-deploy install dk2-t# 部署monitor和生成keysceph-deploy mon create-initialls -l *.keyring# 复制文件到node节点ceph-deploy dk1-t dk2-t# 额外mon节点，mon节点也需要高可用ceph-deploy mon add dk1-t 在dk2-t节点创建集群 mgr模块123# 部署manager （luminous+）12及以后的版本需要部署# 本次部署 jewel 版本 ，不需要执行如下命令 ceph-deploy mgr create dk2-t 在dk2-t节点创建集群 osd模块1234# 12的版本(这里挂载一个 10G的磁盘 /dev/sdb)# create 命令一次完成准备 OSD 、部署到 OSD 节点、并激活它。 create 命令是依次执行 prepare 和 activate 命令的捷径。ceph-deploy osd create --data /dev/sdb dk2-tceph-deploy osd create --data /dev/sdc dk1-t 如何卸载osd1234567891011121314# 查看ceph osd tree# 节点状态标记为outceph osd out osd.0# 从crush中移除节点ceph osd crush remove osd.0# 删除节点ceph osd rm osd.0# 删除节点认证（不删除编号会占住）ceph auth del osd.0 查看 mon 信息12345678ceph mon dumpdumped monmap epoch 1epoch 1fsid 4620d0c7-4458-4ff9-9296-d1318058bafclast_changed 2019-06-19 14:44:41.361005created 2019-06-19 14:44:41.3610050: 172.16.76.134:6789/0 mon.dk2-t 配置文件内容 /etc/ceph/ceph.conf1234567891011[global]public network = 172.16.76.0/22cluster network = 172.16.76.0/22osd pool default size = 2fsid = 4620d0c7-4458-4ff9-9296-d1318058bafcmon_initial_members = dk2-tmon_host = 172.16.76.134auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxmon_max_pg_per_osd = 1000 ceph 一些测试命令创建 rbd pool，名字叫做 kube1ceph osd pool create kube 256 256 如何取得admin的密钥12ceph auth get client.admin 2&gt;&amp;1 |grep "key = " |awk '&#123;print $3&#125;'AQAn/19bbb21GBAA1kc0HRWoGjeoPTRQziA03A== 测试ceph是否正常12345678910111213rbd create kube/test --size 1024 --image-format 2rbd ls kuberbd map kube/test # 如果报错, 警用 rbd info kube/test rbd feature disable kube/test exclusive-lock object-map fast-diff deep-flattenrbd map kube/testrbd showmappedmkfs.ext4 /dev/rbd0mkdir /data/rbd0mount /dev/rbd0 /data/rbd0cd /data/rbd0 &amp;&amp; echo test &gt; test.txt 在k8s 手动创建存储类创建ceph pg123456789101112131415161718192021# Total PGs = (Total_number_of_OSD * 100) / max_replication_count# pg = 1 * 100 /2 ~ 64(取2的次方数)# 这里准备创建2个pool, 每个poolceph osd pool create rbd-k8s 16# 查看ceph osd lspools# 创建imagerbd create rbd-k8s/cephimageredis --size 500M# 查看listrbd list rbd-k8s# 处理新特性# 查看inforbd info rbd-k8s/cephimageredis# 关闭exclusive-lock object-map fast-diff deep-flatten 这些特性rbd feature disable rbd-k8s/cephimageredis exclusive-lock object-map fast-diff deep-flatten 首先创建secret12#获取keygrep key /etc/ceph/ceph.client.admin.keyring |awk '&#123;printf "%s", $NF&#125;'|base64 ceph-secret.yaml1234567apiVersion: v1kind: Secretmetadata: name: ceph-secrettype: "kubernetes.io/rbd"data: key: QVFCTFo2dGNGNXFLRnhBQXBGTXJEdm5CY2k2UGtwZmZrN0JSVEE9PQ== 其次创建pv, pv是没有namespace概念的 persistentVolumeReclaimPolicy是清理规则 (retain: 不清理, Recycle: 回收) redis-ceph-pv.yml 1234567891011121314151617181920apiVersion: v1kind: PersistentVolumemetadata: name: redis2-ceph-rbd-pvspec: capacity: storage: 100Mi accessModes: - ReadWriteOnce rbd: monitors: - '172.16.76.134:6789' pool: rbd-k8s image: cephimageredis user: admin secretRef: name: ceph-secret fsType: ext4 readOnly: false persistentVolumeReclaimPolicy: Recycle 执行部署pv1kubectl create -f redis-ceph-pv.yml 然后创建pvc redis-ceph-pvc.yml 12345678910apiVersion: v1kind: PersistentVolumeClaimmetadata: name: redis2-ceph-rbd-pvcspec: accessModes: - ReadWriteOnce resources: requests: storage: 100Mi 执行部署pvc1kubectl create -f redis-ceph-pvc.yml 最后在rancher上选择挂载rbd]]></content>
      <categories>
        <category>技术文档</category>
        <category>ceph</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>ceph</tag>
        <tag>cephfs</tag>
        <tag>k8s存储</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo添加看板娘]]></title>
    <url>%2F2019%2F09%2F24%2F5-hexo%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98%2F</url>
    <content type="text"><![CDATA[hexo6 左下角添加看板娘 github地址: 张书樵大神 下载大神项目 (会说话,换人物,小游戏等功能)12cd themes/nextv6/sourcegit clone https://github.com/stevenjoezhang/live2d-widget.git github说明比较详细, 这里简单说明 由于这里是克隆到了source目录, hexo d -g的时候会生成到public目录, 相当于站点根目录了 123456# 直接开启autoload.js注释const live2d_path = "/live2d-widget/";# 修改 themes/nextv6/layout/_layout.swig, 最后一行添加如下&lt;!-- 看板娘 --&gt;&lt;script src="/live2d-widget/autoload.js"&gt;&lt;/script&gt; 一般小白简单教程(只有看鼠标方向功能) hexo 官方支持版 需要安装模板1npm install --save hexo-helper-live2d 修改主题配置文件各种宠物预览 12345678910111213141516171819202122232425# Live2D## https://github.com/EYHN/hexo-helper-live2dlive2d: enable: true # enable: false scriptFrom: local # 默认 pluginRootPath: live2dw/ # 插件在站点上的根目录(相对路径) pluginJsPath: lib/ # 脚本文件相对与插件根目录路径 pluginModelPath: assets/ # 模型文件相对与插件根目录路径 # scriptFrom: jsdelivr # jsdelivr CDN # scriptFrom: unpkg # unpkg CDN # scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中 debug: false # 调试, 是否在控制台输出日志 model: use: live2d-widget-model-haruto # npm-module package name # use: wanko # 博客根目录/live2d_models/ 下的目录名 # use: ./wives/wanko # 相对于博客根目录的路径 # use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url display: position: left width: 150 height: 300 mobile: show: true # 手机中是否展示]]></content>
      <categories>
        <category>有趣</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo6</tag>
        <tag>特效</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo鼠标移动和鼠标点击特效]]></title>
    <url>%2F2019%2F09%2F24%2F4-hexo%E9%BC%A0%E6%A0%87%E7%A7%BB%E5%8A%A8%E5%92%8C%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%89%B9%E6%95%88%2F</url>
    <content type="text"><![CDATA[hexo6 鼠标添加点击出现桃心的特效 来自: Next主题个性化 所需要的js文件 未压缩 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051! function(e, t, a) &#123; function n() &#123; c( ".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"), o(), r() &#125; function r() &#123; for (var e = 0; e &lt; d.length; e++) d[e].alpha &lt;= 0 ? (t.body.removeChild(d[e].el), d.splice(e, 1)) : (d[e].y--, d[e].scale += .004, d[e].alpha -= .013, d[e].el.style.cssText = "left:" + d[e].x + "px;top:" + d[e].y + "px;opacity:" + d[e].alpha + ";transform:scale(" + d[e].scale + "," + d[e].scale + ") rotate(45deg);background:" + d[e].color + ";z-index:99999"); requestAnimationFrame(r) &#125; function o() &#123; var t = "function" == typeof e.onclick &amp;&amp; e.onclick; e.onclick = function(e) &#123; t &amp;&amp; t(), i(e) &#125; &#125; function i(e) &#123; var a = t.createElement("div"); a.className = "heart", d.push(&#123; el: a, x: e.clientX - 5, y: e.clientY - 5, scale: 1, alpha: 1, color: s() &#125;), t.body.appendChild(a) &#125; function c(e) &#123; var a = t.createElement("style"); a.type = "text/css"; try &#123; a.appendChild(t.createTextNode(e)) &#125; catch (t) &#123; a.styleSheet.cssText = e &#125; t.getElementsByTagName("head")[0].appendChild(a) &#125; function s() &#123; return "rgb(" + ~~(255 * Math.random()) + "," + ~~(255 * Math.random()) + "," + ~~(255 * Math.random()) + ")" &#125; var d = []; e.requestAnimationFrame = function() &#123; return e.requestAnimationFrame || e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function(e) &#123; setTimeout(e, 1e3 / 60) &#125; &#125;(), n()&#125;(window, document); 压缩后 1!function(e,t,a)&#123;function n()&#123;c(".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText="left:"+d[e].x+"px;top:"+d[e].y+"px;opacity:"+d[e].alpha+";transform:scale("+d[e].scale+","+d[e].scale+") rotate(45deg);background:"+d[e].color+";z-index:99999");requestAnimationFrame(r)&#125;function o()&#123;var t="function"==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement("div");a.className="heart",d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement("style");a.type="text/css";try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName("head")[0].appendChild(a)&#125;function s()&#123;return"rgb("+~~(255*Math.random())+","+~~(255*Math.random())+","+~~(255*Math.random())+")"&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document); 将上面的内容贴到新增的themes/nextv6/source/js/src/love.js 文件中修改themes/nextv6/layout/_layout.swig文件, 末尾添加如下内容12&lt;!-- 鼠标桃心动画 --&gt;&lt;script type="text/javascript" src="/js/src/love.js"&gt;&lt;/script&gt; hexo6 鼠标移动添加星星特效来自: 愚人节鼠标跟随特效 新增js文件 themes/nextv6/source/js/src/love2.js123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143/*! * Fairy Dust Cursor.js * - 90's cursors collection * -- https://github.com/tholman/90s-cursor-effects * -- http://codepen.io/tholman/full/jWmZxZ/ */(function fairyDustCursor() &#123; var possibleColors = ["#D61C59", "#E7D84B", "#1B8798"] var width = window.innerWidth; var height = window.innerHeight; var cursor = &#123;x: width/2, y: width/2&#125;; var particles = []; function init() &#123; bindEvents(); loop(); &#125; // Bind events that are needed function bindEvents() &#123; document.addEventListener('mousemove', onMouseMove); document.addEventListener('touchmove', onTouchMove); document.addEventListener('touchstart', onTouchMove); window.addEventListener('resize', onWindowResize); &#125; function onWindowResize(e) &#123; width = window.innerWidth; height = window.innerHeight; &#125; function onTouchMove(e) &#123; if( e.touches.length &gt; 0 ) &#123; for( var i = 0; i &lt; e.touches.length; i++ ) &#123; addParticle( e.touches[i].clientX, e.touches[i].clientY, possibleColors[Math.floor(Math.random()*possibleColors.length)]); &#125; &#125; &#125; function onMouseMove(e) &#123; cursor.x = e.clientX; cursor.y = e.clientY; addParticle( cursor.x, cursor.y, possibleColors[Math.floor(Math.random()*possibleColors.length)]); &#125; function addParticle(x, y, color) &#123; var particle = new Particle(); particle.init(x, y, color); particles.push(particle); &#125; function updateParticles() &#123; // Updated for( var i = 0; i &lt; particles.length; i++ ) &#123; particles[i].update(); &#125; // Remove dead particles for( var i = particles.length -1; i &gt;= 0; i-- ) &#123; if( particles[i].lifeSpan &lt; 0 ) &#123; particles[i].die(); particles.splice(i, 1); &#125; &#125; &#125; function loop() &#123; requestAnimationFrame(loop); updateParticles(); &#125; /** * Particles */ function Particle() &#123; this.character = "*"; this.lifeSpan = 120; //ms this.initialStyles =&#123; "position": "fixed", "top": "0", //必须加 "display": "block", "pointerEvents": "none", "z-index": "10000000", "fontSize": "20px", "will-change": "transform" &#125;; // Init, and set properties this.init = function(x, y, color) &#123; this.velocity = &#123; x: (Math.random() &lt; 0.5 ? -1 : 1) * (Math.random() / 2), y: 1 &#125;; this.position = &#123;x: x - 10, y: y - 20&#125;; this.initialStyles.color = color; console.log(color); this.element = document.createElement('span'); this.element.innerHTML = this.character; applyProperties(this.element, this.initialStyles); this.update(); document.body.appendChild(this.element); &#125;; this.update = function() &#123; this.position.x += this.velocity.x; this.position.y += this.velocity.y; this.lifeSpan--; this.element.style.transform = "translate3d(" + this.position.x + "px," + this.position.y + "px,0) scale(" + (this.lifeSpan / 120) + ")"; &#125; this.die = function() &#123; this.element.parentNode.removeChild(this.element); &#125; &#125; /** * Utils */ // Applies css `properties` to an element. function applyProperties( target, properties ) &#123; for( var key in properties ) &#123; target.style[ key ] = properties[ key ]; &#125; &#125; init();&#125;)(); 修改themes/nextv6/layout/_layout.swig文件, 末尾添加如下内容12&lt;!-- 鼠标移动星星特效 --&gt;&lt;script type="text/javascript" src="/js/src/love2.js"&gt;&lt;/script&gt;]]></content>
      <categories>
        <category>有趣</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo6</tag>
        <tag>特效</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[k8s遇到的一些问题统计总结]]></title>
    <url>%2F2019%2F09%2F20%2F3-k8s%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%E7%BB%9F%E8%AE%A1%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[不定时更新,文章可能比较散乱,&gt;_&lt; 1. 单机版k8s pod一直是pending的问题 describe一下pod会发现错误: 1 node(s) had taints that the pod didn’t tolerate.这是因为master上存在污点,pod不会再改节点上创建两种办法: deploy 的时候加上 容忍该污点 直接取消master上的污点 12345# 取消master上污点 kubectl taint nodes --all node-role.kubernetes.io/master-# 查看taintkubectl describe node node1 2. 修改service-node-port-range 由于traefik部署需要对外开放80端口, 但默认仅允许30000以上端口 123456789# kubeadm 1.14 配置apiServer: extraArgs: authorization-mode: Node,RBAC service-node-port-range: 79-33000# kubeadm 1.10配置apiServerExtraArgs: service-node-port-range: 79-33000]]></content>
      <categories>
        <category>技术文档</category>
        <category>k8s</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[部署elk7.2.0]]></title>
    <url>%2F2019%2F09%2F19%2F2-%E9%83%A8%E7%BD%B2elk7-2-0%2F</url>
    <content type="text"><![CDATA[说明: 121 单台k8s,本机目录挂载(未配置cephfs)2 如果replicas大于1, 就会出现多个es挂载同一个目录,会出现报错(uuid block) 1. es配置本地挂载 k8s-es-7.2.0.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128---apiVersion: v1kind: ServiceAccountmetadata: labels: app: elasticsearch name: elasticsearch7-admin namespace: ns-elastic7---apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: name: elasticsearch7-admin labels: app: elasticsearchroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects: - kind: ServiceAccount name: elasticsearch7-admin namespace: ns-elastic7---apiVersion: apps/v1kind: StatefulSetmetadata: labels: app: elasticsearch role: master name: elasticsearch-master namespace: ns-elastic7spec: replicas: 1 serviceName: elasticsearch-master selector: matchLabels: app: elasticsearch role: master template: metadata: labels: app: elasticsearch role: master spec: serviceAccountName: elasticsearch7-admin restartPolicy: Always securityContext: fsGroup: 1000 containers: - name: elasticsearch-master image: hub.boqii.com/bq/elasticsearch:7.2.0 command: ["bash", "-c", "ulimit -l unlimited &amp;&amp; sysctl -w vm.max_map_count=262144 &amp;&amp; chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data &amp;&amp; exec su elasticsearch docker-entrypoint.sh"] imagePullPolicy: IfNotPresent securityContext: privileged: true ports: - containerPort: 9200 protocol: TCP - containerPort: 9300 protocol: TCP resources: requests: cpu: "50m" limits: cpu: "800m" env: - name: cluster.name value: "es_cluster" - name: node.master value: "true" - name: node.data value: "true" - name: cluster.initial_master_nodes value: "elasticsearch-master-0" # 根据副本数和name配置 - name: discovery.zen.ping_timeout value: "5s" - name: node.ingest value: "false" - name: ES_JAVA_OPTS value: "-Xms1g -Xmx1g" - name: "discovery.zen.ping.unicast.hosts" value: "elasticsearch-discovery" # Disvocery Service - name: "http.cors.enabled" value: "true" - name: "http.cors.allow-origin" value: "*" volumeMounts: - name: elasticsearch-data-volume mountPath: /usr/share/elasticsearch/data volumes: - name: elasticsearch-data-volume hostPath: path: /data/k8s-container/elk-7.2.0/es-7.2.0/data---apiVersion: v1kind: Servicemetadata: labels: app: elasticsearch name: elasticsearch-discovery namespace: ns-elastic7spec: publishNotReadyAddresses: true ports: - name: transport port: 9300 targetPort: 9300 selector: app: elasticsearch role: master---kind: ServiceapiVersion: v1metadata: labels: app: elasticsearch name: elasticsearch-service namespace: ns-elastic7spec: type: NodePort ports: - port: 9200 targetPort: 9200 nodePort: 19230 protocol: TCP selector: app: elasticsearch 2. es配置nfs动态挂载 k8s-es-7.2.0-nfs.yml123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129---apiVersion: v1kind: ServiceAccountmetadata: labels: app: elasticsearch name: elasticsearch-admin namespace: ns-elastic---apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: name: elasticsearch-admin labels: app: elasticsearchroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: cluster-adminsubjects: - kind: ServiceAccount name: elasticsearch-admin namespace: ns-elastic---apiVersion: apps/v1kind: StatefulSetmetadata: labels: app: elasticsearch role: master name: elasticsearch-master namespace: ns-elasticspec: replicas: 2 volumeClaimTemplates: - metadata: name: elasticsearch-data-nfs annotations: volume.beta.kubernetes.io/storage-class: "nfs" spec: accessModes: [ "ReadWriteOnce" ] resources: requests: storage: 2Gi serviceName: elasticsearch-master selector: matchLabels: app: elasticsearch role: master template: metadata: labels: app: elasticsearch role: master spec: serviceAccountName: elasticsearch-admin restartPolicy: Always securityContext: fsGroup: 1000 containers: - name: elasticsearch-master image: elasticsearch:7.2.0 command: ["bash", "-c", "ulimit -l unlimited &amp;&amp; sysctl -w vm.max_map_count=262144 &amp;&amp; chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data &amp;&amp; exec su elasticsearch docker-entrypoint.sh"] imagePullPolicy: IfNotPresent volumeMounts: - name: elasticsearch-data-nfs mountPath: /usr/share/elasticsearch/data securityContext: privileged: true ports: - containerPort: 9200 protocol: TCP - containerPort: 9300 protocol: TCP env: - name: cluster.name value: "es_cluster" - name: node.master value: "true" - name: node.data value: "true" - name: cluster.initial_master_nodes value: "elasticsearch-master-0,elasticsearch-master-1" # 根据副本数和name配置 - name: discovery.zen.ping_timeout value: "5s" - name: node.ingest value: "false" - name: ES_JAVA_OPTS value: "-Xms1g -Xmx1g" - name: "discovery.zen.ping.unicast.hosts" value: "elasticsearch-discovery" # Disvocery Service - name: "http.cors.enabled" value: "true" - name: "http.cors.allow-origin" value: "*"---apiVersion: v1kind: Servicemetadata: labels: app: elasticsearch name: elasticsearch-discovery namespace: ns-elasticspec: publishNotReadyAddresses: true ports: - name: transport port: 9300 targetPort: 9300 selector: app: elasticsearch role: master---kind: ServiceapiVersion: v1metadata: labels: app: elasticsearch name: elasticsearch-service namespace: ns-elasticspec: type: NodePort ports: - port: 9200 targetPort: 9200 nodePort: 19220 protocol: TCP selector: app: elasticsearch 3. kibana配置k8s-kibana-7.2.0.yml12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485apiVersion: v1kind: ConfigMapmetadata: name: kibana-config namespace: ns-elastic7 labels: elastic-app: kibanadata: kibana.yml: | server.name: kibana server.host: "0" elasticsearch.hosts: [ "http://elasticsearch-service:9200" ] xpack.monitoring.ui.container.elasticsearch.enabled: true---kind: DeploymentapiVersion: apps/v1beta2metadata: labels: elastic-app: kibana name: kibana namespace: ns-elastic7spec: replicas: 1 revisionHistoryLimit: 10 selector: matchLabels: elastic-app: kibana template: metadata: labels: elastic-app: kibana spec: containers: - name: kibana image: hub.boqii.com/bq/kibana:7.2.0 ports: - containerPort: 5601 protocol: TCP resources: requests: cpu: "50m" limits: cpu: "800m" volumeMounts: - name: kibana-config mountPath: /usr/share/kibana/config volumes: - name: kibana-config configMap: name: kibana-config tolerations: - key: node-role.kubernetes.io/master effect: NoSchedule---kind: ServiceapiVersion: v1metadata: labels: elastic-app: kibana name: kibana-service namespace: ns-elastic7spec: ports: - port: 5601 targetPort: 5601 selector: elastic-app: kibana type: NodePort---apiVersion: extensions/v1beta1kind: Ingressmetadata: labels: elastic-app: kibana name: kibana-ingress namespace: ns-elastic7spec: rules: - host: elk-kibana-dev.boqii.com http: paths: - backend: serviceName: kibana-service servicePort: 5601 4. logstash配置 本地挂载 k8s-logstash-7.2.0.yml 4.1 config/pipelines.yml 12- pipeline.id: main path.config: "/usr/share/logstash/config/pipeline/*.conf" 4.2 首先配置grok规则 config/pipeline/logstash.conf 12345678910111213141516171819202122input &#123; udp &#123; port =&gt; "10000" &#125; &#125; filter &#123; grok &#123; match =&gt; &#123; "message" =&gt; "\&#123;\"id\":\"(?&lt;id&gt;(.)*)\",\"tag\":\"(?&lt;tag&gt;(.)*)\",\"title\":\"%&#123;GREEDYDATA:title&#125;(?&lt;title&gt;(.|\r|\n)*)\",\"value\":\"%&#123;GREEDYDATA:value&#125;(?&lt;value&gt;(.|\r|\n)*)\",\"createdAt\":\"(?&lt;createdAt&gt;\S+ \S+)\",\"Telephone\":\"(?&lt;Telephone&gt;(.)*)\",\"uid\":\"(?&lt;uid&gt;(.)*)\",\"updateTime\":\"(?&lt;updateTime&gt;(.)*)\",\"appVersion\":\"(?&lt;appVersion&gt;(.)*)\",\"mobileModel\":\"(?&lt;mobileModel&gt;(.)*)\",\"osVersion\":\"(?&lt;osVersion&gt;(.)*)\",\"channel\":\"(?&lt;channel&gt;(.)*)\",\"UDID\":\"(?&lt;UDID&gt;(.)*)\"\&#125;" &#125; &#125; &#125;output &#123; elasticsearch &#123; hosts =&gt; [ "http://elasticsearch-service:9200" ] index =&gt; "k8s2-dev-%&#123;+YYYY.MM.dd&#125;" &#125; &#125; 4.3 配置文件 k8s-logstash-7.2.0.yml 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455---kind: DeploymentapiVersion: apps/v1beta2metadata: labels: elastic-app: logstash name: logstash namespace: ns-elasticspec: replicas: 1 revisionHistoryLimit: 10 selector: matchLabels: elastic-app: logstash template: metadata: labels: elastic-app: logstash spec: containers: - name: logstash image: hub.boqii.com/bq/logstash:7.2.0 ports: - containerPort: 10000 protocol: UDP volumeMounts: - name: logstash-config mountPath: /usr/share/logstash/config volumes: - name: logstash-config hostPath: path: /data/k8s-pod/elk-7.2.0/logstash-7.2.0/config tolerations: - key: node-role.kubernetes.io/master effect: NoSchedule---kind: ServiceapiVersion: v1metadata: labels: elastic-app: logstash name: logstash-service namespace: ns-elasticspec: type: NodePort ports: - port: 10000 targetPort: 10000 nodePort: 10000 protocol: UDP selector: elastic-app: logstash type: NodePort---]]></content>
      <categories>
        <category>技术文档</category>
        <category>elk</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>elk</tag>
        <tag>elk7</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[首次搭建hexo博客系统]]></title>
    <url>%2F2019%2F09%2F19%2F%E9%A6%96%E6%AC%A1%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%2F</url>
    <content type="text"><![CDATA[1 安装hexo 1.1 在mac上安装 12# 安装nodebrew install node npm 1.2 在linux安装 123# 安装node10curl -sL https://rpm.nodesource.com/setup_10.x | bash -yum install -y nodejs 1.3 安装hexo 12# 安装hexonpm install -g hexo 2 初始化123456789101112cd /data/github/# 初始化hexo init blog# 框架安装npm install#安装 Hexo 关于启动服务器的插件npm install hexo-server --save# 启动服务器, 本地查看效果, 如果不指定端口，默认为4000hexo server 3 主题和配置 下载主题：https://github.com/theme-next/hexo-theme-next 12unzip hexo-theme-next-master.zipmv hexo-theme-next-master $blog/themes/ 修改主题配置 _config.yml 中的其他属性 12345title: Zhangzhiwei's Blog...theme: hexo-theme-next...scheme: Mist 4. 编写更新博客 创建博客 1hexo new '第一个博客' cat source/_posts/第一个博客.md 123456title: 第一个博客date: 2019-09-19 16:58:01tags: - hexocategories: - hexo学习 github 创建一个Repository仓库 1231. 仓库名字必须是 xxx.github.io2. 在settings中 勾选Template repository3. 记得添加自己的ssh github配置 12 # 安装 hexo 关于 git 的组件npm install hexo-deployer-git --save 在_config.yml 中为 git 添加配置 1234deploy: type: git repository: git@github.com:*/*.github.io.git branch: master 查看是否能提交代码github 1ssh -T -ai ~/.ssh/id_rsa git@github.com 部署 1234hexo ghexo d或者hexo d -g 5. next6让首页文字预览显示 5.1 方法一: 自动形成摘要,默认截取的长度为 150 字符 1231. 找到主题的配置文件(themes/next/_config.yml)2. 修改auto_excerpt,把enable改为对应的false改为true3. hexo d -g 5.2 方法二: 博客内容中添加 &lt; !–more–&gt; 123# 安装nodebrew install node npm &lt;!-- more --&gt; 5.3 方法三: 在文章中的front-matter中添加description，并提供文章摘录,这种方式只会在首页列表中显示文章的摘要内容，进入文章详情后不会再显示。 1234567891011title: 部署elk7.2.0date: 2019-09-19 17:59:53copyright: truetags: - k8s - elk - elk7categories: - 技术文档 - elkdescription: 本文主要是简单单机版部署elk7体验, 并非高可用集群方式部署, 部分安装步骤省略. 主要是记录yml配置文件, 仅供参考. 详细内容请点击下方阅读全文, 非常感谢! 6. next6添加搜索功能123456789101. npm install hexo-generator-searchdb --save2. 全局配置文件_config.ymlsearch: path: search.xml field: post format: html limit: 100003. 修改主题的_config.ymllocal_search: enable: true 7. next6 Mist字体的 首页文章间距和首页页宽,字体 7.1 首页文章间距 12345增加一些内容: source/css/_schemes/Mist/_posts-expanded.styl.posts-expand .post &#123; margin-top: 30px; margin-bottom: 30px;&#125; 7.2 页宽 1234source/css/_variables/base.styl$content-desktop = 900px$content-desktop-large = 1000px$content-desktop-largest = 1100px 7.3 字体大小 1234567891011themes/next/source/css/_variables/base.styl$font-size-base = 0.95em;$font-size-base = unit(hexo-config('font.global.size'), em) if hexo-config('font.global.size') is a 'unit';$font-size-smallest = .75em;$font-size-smaller = .8125em;$font-size-small = .855em;$font-size-medium = 0.95em;$font-size-large = 0.975em;$font-size-larger = 1.em;$font-size-largest = 1.125em; 8. 添加网格 8.1 自定义方式修改 1234567891011121314# 新创建自定义文件cat themes/next/source/css/_custom/custom.styl// 主页文章添加阴影效果.post &#123;margin-top: 60px;margin-bottom: 60px;padding: 25px;-webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);-moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);&#125;# 修改config文件vim ./themes/next/_config.ymlcustom: custom 8.2 next6版本修改方式 参考: hexo6–next美化整理 修改 themes/next/layout/_layout.swig 1234&#123;% if theme.canvas_nest %&#125;&lt;script type="text/javascript" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;&lt;/script&gt;&#123;% endif %&#125; 将上述代码防止在&lt; /body&gt; 前就可以了(注意不要放在&lt; /head&gt;的后面)。 修改主题的_config.yml 123456canvas_nest: true//color: 线条颜色, 默认: '0,0,0'；三个数字分别为(R,G,B)//opacity: 线条透明度（0~1）, 默认: 0.5//count: 线条的总数量, 默认: 150//zIndex: 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1 注意:我这里打开提示缺少 canvas-nest.min.js文件,这里是手动copy的一份写到 source/lib/canvas-nest/canvas-nest.min.js 1!function()&#123;function o(w,v,i)&#123;return w.getAttribute(v)||i&#125;function j(i)&#123;return document.getElementsByTagName(i)&#125;function l()&#123;var i=j("script"),w=i.length,v=i[w-1];return&#123;l:w,z:o(v,"zIndex",-1),o:o(v,"opacity",0.5),c:o(v,"color","0,0,0"),n:o(v,"count",99)&#125;&#125;function k()&#123;r=u.width=window.innerWidth||document.documentElement.clientWidth||document.body.clientWidth,n=u.height=window.innerHeight||document.documentElement.clientHeight||document.body.clientHeight&#125;function b()&#123;e.clearRect(0,0,r,n);var w=[f].concat(t);var x,v,A,B,z,y;t.forEach(function(i)&#123;i.x+=i.xa,i.y+=i.ya,i.xa*=i.x&gt;r||i.x&lt;0?-1:1,i.ya*=i.y&gt;n||i.y&lt;0?-1:1,e.fillRect(i.x-0.5,i.y-0.5,1,1);for(v=0;v&lt;w.length;v++)&#123;x=w[v];if(i!==x&amp;&amp;null!==x.x&amp;&amp;null!==x.y)&#123;B=i.x-x.x,z=i.y-x.y,y=B*B+z*z;y&lt;x.max&amp;&amp;(x===f&amp;&amp;y&gt;=x.max/2&amp;&amp;(i.x-=0.03*B,i.y-=0.03*z),A=(x.max-y)/x.max,e.beginPath(),e.lineWidth=A/2,e.strokeStyle="rgba("+s.c+","+(A+0.2)+")",e.moveTo(i.x,i.y),e.lineTo(x.x,x.y),e.stroke())&#125;&#125;w.splice(w.indexOf(i),1)&#125;),m(b)&#125;var u=document.createElement("canvas"),s=l(),c="c_n"+s.l,e=u.getContext("2d"),r,n,m=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(i)&#123;window.setTimeout(i,1000/45)&#125;,a=Math.random,f=&#123;x:null,y:null,max:20000&#125;;u.id=c;u.style.cssText="position:fixed;top:0;left:0;z-index:"+s.z+";opacity:"+s.o;j("body")[0].appendChild(u);k(),window.onresize=k;window.onmousemove=function(i)&#123;i=i||window.event,f.x=i.clientX,f.y=i.clientY&#125;,window.onmouseout=function()&#123;f.x=null,f.y=null&#125;;for(var t=[],p=0;s.n&gt;p;p++)&#123;var h=a()*r,g=a()*n,q=2*a()-1,d=2*a()-1;t.push(&#123;x:h,y:g,xa:q,ya:d,max:6000&#125;)&#125;setTimeout(function()&#123;b()&#125;,100)&#125;();% zhangzw@MacBook-Pro  /data/github/blog   master ●  9. 添加评论功能 9.1 注册leancloud 1注册-&gt; 验证邮箱-&gt; 实名认证 -&gt; 设置获取appid和appkey 9.2 修改配置文件 123456valine: enable: true appid: 'appid' appkey: 'appkey' placeholder: "ヾﾉ≧∀≦)o 来呀！快活呀！~啦啦啦~ 啦啦啦啦~" visitor: true //这个打开页会统计文章阅读数 10. next6添加字数统计 和阅读时长 hexo-symbols-count-time 10.1 安装node扩展 1npm install hexo-symbols-count-time --save 10.2 修改全局配置 _config.yml 123456symbols_count_time: symbols: true time: true total_symbols: true total_time: true exclude_codeblock: false 10.3 修改主题配置 _config.yml 1234567symbols_count_time: separated_meta: true item_text_post: true item_text_total: false awl: 4 wpm: 275 suffix: mins. 11. next6 文章置顶功能 11.1 安装node扩展 12npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save 11.2 在文章开头添加置顶标识 1top: 10 11.3 首页添加明显置顶标识 123456themes/next/layout/_macro/post.swig 在&lt;div class="post-meta"&gt; 下添加如下代码&#123;% if post.top %&#125; &lt;i class="fa fa-thumb-tack"&gt;&lt;/i&gt; &lt;font color=green&gt;置顶&lt;/font&gt; &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;&#123;% endif %&#125; 12. next6 开启标签和分类 12.1 创建tags相关目录 12hexo new page tagshexo new page categories 12.2 开启tags标签和分类 123vim themes/next/_config.ymltags: /tags/ || tagscategories: /categories/ || th 12.3 修改tags站点文件 12345678cat source/tags/index.md---title: tagsdate: 2019-09-24 10:08:59type: "tags"layout: "tags"comments: false--- 12.4 修改categories站点文件 12345678cat source/categories/index.md---title: categoriesdate: 2019-09-24 10:09:55type: "categories"layout: "categories"comments: false--- 12.5 去掉xxx.github.io/tags/ 页面的post-title(因为我的这个css左对齐了,默认是居中,所以很丑) 123# 注释下面这段代码vim themes/nextv/layout/page.swig &lt;!-- &#123;% include '_partials/page/page-header.swig' %&#125; --&gt;]]></content>
      <categories>
        <category>有趣</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo6</tag>
        <tag>hexo美化</tag>
      </tags>
  </entry>
</search>
